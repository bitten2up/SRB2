# Makefile config for Emscripten (WebAssembly) builds

# Unimplemented features are commented out

# WARNING: NOT FEATURE COMPLETE COMPARED TO CMAKE!

EMFLAGS ?= :

########################################################################
# Configuration
########################################################################

# Output file type for target: .mjs, .js, .html, .a
EMCC_OUTPUT_TYPE?=.js

# Enable asyncify behavior.
# Opt-in (disable by default)
# ifndef NOASYNCIFY
# HAVE_ASYNCIFY=1
# endif

# Enable Fluidsynth MIDI
# Opt-in (disable by default)
# ifndef NOFLUIDSYNTH
# HAVE_FLUIDSYNTH=1
# endif

# Base URL where the debug source map is located. Include trailing slash.
# \todo

# Compile one output file that combines JS, WASM, and HTML.
# \todo

# Path to shell HTML file. Optional.
# \todo

# Path to directory or file to preload on Emscripten startup. If path is a directory, then all files in the directory will be preloaded.
# \todo

# Enable support for WebGL 2.
# \todo

########################################################################
# Definitions
########################################################################

OPTS += -DEMSCRIPTEN

# Opt-out features
NONET=1
NOHW=1
NOASM=1
NORUSEASM=1
NONX86=1

# Opt-out Makefile procedures
NOOPENMPT=1
NOOBJDUMP=1
NOUPX=1

# Opt-in features
#LOWMEMORY=1
#FWAD=1

OPTS += -DTOUCHINPUTS -DMAINLOOPBYFUNCTION

ifdef HAVE_ASYNCIFY
OPTS += -DHAVE_ASYNCIFY
EMFLAGS += -s ASYNCIFY=1
else
OPTS += -DNOWIPE
endif

# Note about ASYNCIFY:
# To mitigate the performance penalty, it would be ideal to use 
# -s ASYNCIFY_IGNORE_INDIRECT or specify a ASYNCIFY_WHITELIST.
#
# However, ASYNCIFY_IGNORE_INDIRECT breaks wipes. One wipe will run, but
# subsequent wipes will cause out of memory accesses.
#
# ASYNCIFY_WHITELIST requires complete code paths, starting from "main",
# to any function that triggers async behavior, such as I_Sleep or SDL_Delay.
# SDL supplies a hint, SDL_HINT_EMSCRIPTEN_ASYNCIFY "0", which strips away
# some async calls. But this is a workaround vs. supplying the whole code path.
#
# Below is a current attempt on mapping async code paths. It's incomplete.

# This causes errors with HandleAudioProcess (bad indexing)
# -s ASYNCIFY_WHITELIST='["main", "main_cont", "D_SRB2Main", "D_SRB2Loop", "D_SRB2LoopIter", "TryRunTics", "NetUpdate", "I_OsPolling", "I_GetEvent", "I_Sleep", "I_GetTime", "F_RunWipe", "HandleAudioProcess", "mix_channels", "SDL_GetTicks", "SDL_WaitEvent", "SDL_WaitEventTimeout", "SDL_Delay", "SDL_RenderPresent", "GLES2_RenderPresent", "SDL_GL_SwapWindow", "Emscripten_GLES_SwapWindow", "byn$$fpcast-emu$$Emscripten_GLES_SwapWindow", "SDL_UpdateWindowSurface", "SDL_UpdateWindowSurfaceRects", "Emscripten_UpdateWindowFramebuffer"]' \

########################################################################
# Source files
########################################################################

# \todo is this correct?
OBJS+=$(OBJDIR)/i_emscripten.o

########################################################################
# Libraries
########################################################################

EMFLAGS += \
    -s USE_LIBPNG=1 \
    -s USE_SDL=2 \
    -s USE_SDL_IMAGE=2 \
    -s USE_ZLIB=1

# ifdef HAVE_FLUIDSYNTH
# # We compile SDL2_mixer ourselves to add Fluidsynth support.
# # Source: https://github.com/emscripten-core/emscripten/compare/master...mazmazz:ports-fluidsynth
# # EMFLAGS += -s USE_FLUIDSYNTH=1 # not needed, we already built it
# OPTS += -DHAVE_FLUIDSYNTH
# CFLAGS += -I../libs/SDL2_mixer/emscripten/include/SDL2
# CPPFLAGS += -I../libs/SDL2_mixer/emscripten/include/SDL2
# LDFLAGS += -L../libs/SDL2_mixer/emscripten/lib -lSDL2_mixer -lvorbis -logg -L../libs/fluidsynth/emscripten/lib -lfluidsynth
# else
# EMFLAGS += -s USE_SDL_MIXER=2
# endif

########################################################################
# Compiler setup
########################################################################

# Set build parameters
ifdef DEBUGMODE
# Memory size to initialize Emscripten. Multiple of 65536.
TOTALMEMORY=101187584
EMFLAGS+=-O0 --llvm-opts 0 -g4

# \todo
# WEBGL_DEBUG=-s GL_ASSERTIONS=1

# \todo Source map base

else
TOTALMEMORY=99287040
EMFLAGS+=-O3 --llvm-opts 3 -g0
endif

# \todo Toggle single file output

# \todo Import shell HTML

# \todo Set preload path

# \todo Configure WebGL

# Export functions to JS
EXPORTLIST='["ccall","_main","_Em_Program_Main","_Em_Program_Loop"]'

# Definitions from emscripten-ver0
#     -s EXPORTED_FUNCTIONS='["_main","_main_cont","_ImmediateQuit","_Halt","_pause_loop","_resume_loop",\
# "_change_resolution","_inject_keycode","_inject_text","_COM_ImmedExecute",\
# "_lock_mouse","_unlock_mouse","_update_fullscreen_status"]'

EMFLAGS += \
    -s TOTAL_MEMORY=$(TOTALMEMORY) \
    -s ALLOW_MEMORY_GROWTH=1 \
    -s EXTRA_EXPORTED_RUNTIME_METHODS='["ccall"]' \
    -s EXPORTED_FUNCTIONS='$(EXPORTLIST)' \
    -lidbfs.js

# Wire it all together
PKG_CONFIG = :
SDL_CONFIG = :
PNG_CONFIG = :

CC = emcc
CXX = em++

EXENAME=srb2$(EMCC_OUTPUT_TYPE)

CFLAGS += $(EMFLAGS)
CPPFLAGS += $(EMFLAGS)
LDFLAGS += $(EMFLAGS)
